---
- hosts: nginx
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:

  #################################
  ## setup the user
  #################################
  - name: ensure user exists
    hsuser.js: name="{{pac}}-{{user}}" password="{{password}}" exists="true"

  #################################
  ## create directories
  #################################
  - name: create directory var/tmp
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory
  - name: create directory var/run
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/run"
      state: directory
  - name: create directory etc
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc"
      state: directory
  - name: create directory etc/nginx.conf.d
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc/nginx.conf.d"
      state: directory
  - name: create directory bin
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/bin"
      state: directory
  - name: create directory htdocs
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs/"
      state: directory

  #################################
  ## upload files
  #################################
  - name: upload nginx.conf
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/etc/nginx.conf" src="templates/nginx.conf" mode=0600
  - name: upload nginx.sslconf.conf
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/etc/nginx.sslconf.tpl" src="templates/nginx.sslconf.tpl" mode=0600
  - name: upload nginx start script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/start-nginx.sh" src="templates/start-nginx.sh" mode=0700
  - name: upload nginx restart script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/restart-nginx.sh" src="templates/restart-nginx.sh" mode=0700
  - name: upload nginx stop script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/stop-nginx.sh" src="templates/stop-nginx.sh" mode=0700
  - name: upload monit configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.monitrc" src="templates/monitrc" mode=0600
  - name: upload logrotate configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.logrotate" src="templates/logrotate" mode=0600
  - name: upload index.html
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs/index.html" src="templates/index.html" mode=0600
  - name: upload addwebsite script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/addwebsite.sh" src="scripts/addwebsite.sh" mode=0700
  - name: upload letsencrypt script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/letsencrypt.sh" src="scripts/letsencrypt.sh" mode=0700

  ####################################
  ## install cron jobs
  ####################################
  - name: start monit as cronjob
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "start monit at reboot"
      special_time: reboot
      job: rm -f $HOME/var/run/monit.id && /usr/bin/monit -c "$HOME/.monitrc"
  - name: run logrotate once a day
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "logrotate"
      minute: "22"
      hour: "1"
      job: "/usr/sbin/logrotate -s $HOME/.logrotate.state $HOME/.logrotate"
  - name: run letsencrypt once a day
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "logrotate"
      minute: "22"
      hour: "2"
      job: "$HOME/bin/letsencrypt.sh all"

  ###################################
  ## setup the first example domain
  ###################################
  - name: add sample website
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      $HOME/bin/addwebsite.sh {{domain}}
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/etc/nginx.conf.d/{{domain}}.conf"

  ###################################
  ## start nginx service via monit
  ###################################
  - name: start monit
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      /usr/bin/monit -c ".monitrc"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/var/run/monit.id"
